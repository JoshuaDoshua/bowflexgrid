@import "../src/_utility.scss";

$space: 20px;

$bps: (
sml: 505px, // < large phone / small tablet
med: 768px, // common tablet
lrg: 1024px, // large tablet / small desktop
xlg: 1400px // large desktop >
);

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  transition: all ease 450ms;
}

body {
  font-family: "Source Code Pro", "monospace";
  text-align: center;
  margin-bottom: 15vh;
  max-width: 100vw;
  overflow-x: hidden;
  p { color: red; }
}

h1,h2,h3,h4,h5,h6 {
  font-family: 'Lato', 'sans-serif';
  text-transform: uppercase;
  font-weight:300;
}

h1 {
  margin: $space auto;
}
h2 {
  margin: #{$space * 2} auto;
  padding: #{$space * 3} 0;
  background: powderblue;
}
h3 {
  padding: #{$space * 1.5};
  border-top: 1px solid lightgray;
  border-bottom: 1px solid lightgray;
  margin: #{$space * 2} auto;
}

[flex] { overflow: hidden; }
.b {
  background: powderblue;
  padding: 1em 0;
  line-height: 0;

  #nowrap &:nth-child(even),
  &.alt { background: paleturquoise; }
}

.helpers {
  [bow], [flex] { padding-top: 30px; }
  [bow], [col] { margin-bottom: $space; }
  [bow] {
    margin-top: $space;
    margin-bottom: $space;
    padding-bottom: $space;
    &:hover {
      opacity: 1;
      background: rgba(0,0,0,0.05);
      [flex] { background: rgba(0,0,0,0.05); }
      [col] { color: transparent; }
      &::after,
      [flex]::after,
      [col]::after { opacity: 1; }
    }
  }
  [bow], [flex], [col] {
    position: relative;
    &::after {
      display: block;
      position: absolute;
      top: 6px;
      left: 4px;
      opacity: 0;
      font-size: 12px;
      width: 100%;
      pointer-events: none;
      color: black;
			white-space: nowrap;
			text-align: center;
    }
  }
  [bow]::after { content: '<div bow>'; }
  [flex]::after { content: '<div flex>'; }
  [col]::after {
    content: '<div col="'attr(col)'">';
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
  }
  [col="1"]::after { content: 'col=1'; }
  [col="auto"]::after { content: 'col="auto"'; }
}

.atts {
	&[bow]::after { content: '<div bow="'attr(bow)'">'; }
	[flex]::after,
	&[flex]::after { content: '<div flex="'attr(flex)'">'; }
}
.noatts {
	&[bow]::after { content: '<div bow>'; }
	[flex]::after,
	&[flex]::after { content: '<div flex>'; }
}

#intro {
	ul { margin-bottom: 4.5em; }
	li { list-style: none; margin-bottom: .5em; }
	h4 {
		font-size: 1.25em;
		border-bottom: 1px solid powderblue;
		padding-bottom: .25em;
		margin-bottom: .75em;
	}
}

$selfs: (1,120),
				(2,40),
				(3,200),
				(4,80),
				(5,140);

#align-top, #self-top,
#align-middle, #self-middle,
#align-bottom, #self-bottom,
#align-stretch, #self-stretch,
#self-baseline {
	@each $child,$min in $selfs {
		[col]:nth-child(#{$child}) {
			min-height: #{$min}px;
    }
  }
}
#align-baseline {
	@each $child,$min in $selfs {
		$pad: $min / 10;
		[col]:nth-child(#{$child}) {
			min-height: #{$min}px;
			padding-top: #{$pad}px;
			&::before { height: #{$pad}px; }
    }
  }
}

#align-baseline [col] {
  line-height: 1;
  &::before{
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    background: rgba(0,200,0,0.15);
  }
}

#responsive {
  [bow], [flex] { background: rgba(0,0,0,0.05); }
  [bow]::after,
  [flex]::after,
  [col]:not(.default)::after { opacity: 1; }

  &-flex [flex]::after {
    content: '<div flex="'attr(flex)'">';
    @include respond(sml) { content: '<div flex-sml="'attr(flex-sml)'">'; }
    @include respond(med) { content: '<div flex-med="'attr(flex-med)'">'; }
    @include respond(lrg) { content: '<div flex-lrg="'attr(flex-lrg)'">'; }
    @include respond(xlg) { content: '<div flex-xlg="'attr(flex-xlg)'">'; }
  }
  &-cols [col]::after {
    content: '<div col="'attr(col)'">';
    @include respond(sml) { content: '<div col-sml="'attr(col-sml)'">'; }
    @include respond(med) { content: '<div col-med="'attr(col-med)'">'; }
    @include respond(lrg) { content: '<div col-lrg="'attr(col-lrg)'">'; }
    @include respond(xlg) { content: '<div col-xlg="'attr(col-xlg)'">'; }
  }
  &-hide {
    &-up {
      [col] { background: transparent; border: 1px dashed gray; opacity: 0.25; }
      [col="12"] { background: powderblue; border: none; opacity: 1; }
      [col-sml] {
				&::after { content: '<div col="'attr(col)'" col-sml="'attr(col-sml)'">'; }
				@include respond(sml) { background: powderblue; border: none; opacity: 1; }
			}
      [col-med] {
				&::after { content: '<div col="'attr(col)'" col-med="'attr(col-med)'">'; }
				@include respond(med) { background: powderblue; border: none; opacity: 1; }
      }
				[col-lrg] {
					&::after { content: '<div col="'attr(col)'" col-lrg="'attr(col-lrg)'">'; }
				@include respond(lrg) { background: powderblue; border: none; opacity: 1; }
      }
      [col-xlg] {
				&::after { content: '<div col="'attr(col)'" col-xlg="'attr(col-xlg)'">'; }
				@include respond(xlg) { background: powderblue; border: none; opacity: 1; }
      }
    }
    &-down {
      [col] { background: transparent; border: 1px dashed gray; opacity: 0.25; }
      [col]:first-of-type { background: powderblue; border: none; opacity: 1; }
      [col-sml] {
				&::after { content: '<div col="'attr(col)'" col-sml="'attr(col-sml)'">'; }
				@include respond(sml,max) { background: powderblue; border: none; opacity: 1; }
      }
      [col-med] {
				&::after { content: '<div col="'attr(col)'" col-med="'attr(col-med)'">'; }
				@include respond(med,max) { background: powderblue; border: none; opacity: 1; }
      }
      [col-lrg] {
				&::after { content: '<div col="'attr(col)'" col-lrg="'attr(col-lrg)'">'; }
				@include respond(lrg,max) { background: powderblue; border: none; opacity: 1; }
      }
      [col-xlg] {
				&::after { content: '<div col="'attr(col)'" col-xlg="'attr(col-xlg)'">'; }
				@include respond(xlg,max) { background: powderblue; border: none; opacity: 1; }
      }
    }
    &-between {
      [col] { background: transparent; border: 1px dashed gray; opacity: 0.25; }
      [col="12"] { background: powderblue; border: none; opacity: 1; }
      [col-sml][col-med] {
				&::after { content: '<div col="'attr(col)'" col-sml="'attr(col-sml)'" col-med="'attr(col-med)'">'; }
				@include respondBetween(sml,med) { background: powderblue; border: none; opacity: 1; }
      }
      [col-med][col-lrg] {
				&::after { content: '<div col="'attr(col)'" col-med="'attr(col-med)'" col-lrg="'attr(col-lrg)'">'; }
				@include respondBetween(med,lrg) { background: powderblue; border: none; opacity: 1; }
      }
      [col-lrg][col-xlg] {
				&::after { content: '<div col="'attr(col)'" col-lrg="'attr(col-lrg)'" col-xlg="'attr(col-xlg)'">'; }
				@include respondBetween(lrg,xlg) { background: powderblue; border: none; opacity: 1; }
      }
    }
  }
  [col] { display: block !important; width: 100% !important; }
}

#fluid-wrapper {
	[flex]::after { content: '<div flex>'; }
}

#play-tools {
	text-align: center;
	position: relative;
	h4 {
		padding-bottom: .5em;
		border-bottom: 1px solid lightgray;
		margin-bottom: .5em;
	}
	label {
		display: inline-block;
		margin-right: .5em;
	}
	input { margin-right: .5em; }
	select { width: 100%; }
	table { width: 600px; margin-left: auto; margin-right: auto; }
	tr {
	}
	th,td {
		padding: .25em 0;
	}
	th {}
	td {}
}
.play-btn {
	display: inline-block;
	margin-right: .25em;
	border: 1px solid lightgray;
	width: 40%;
	font-size: 14px;
	padding: .25em;
	line-height: 1;
	font-weight: 100;
	text-transform: uppercase;
	&.active { background: gray; }
}

#playground {
	[bow], [flex] { background: rgba(0,0,0,0.05); }
	[bow]::after,
	[flex]::after { opacity: 1; }
	[col]::after { opacity: 0 !important; }

	[col] {
		opacity: 1 !important;
		color: black !important;
		position: relative;
		min-height: 50px;

		label {
			display: block;
			font-size: 12px;
		}
	}
}
.play-col {
	label {
		margin-top: .5em;
	}
	input { margin-right: 2px; }
	span {
		font-size: 8px;
	}
	hr {
		margin: .5em auto;
		border: 1px solid lightgray;
	}
}


.github-corner svg {
	fill:#70B7FD;
	fill: powderblue;
	color:#fff;
	position: fixed;
	top: 0;
	border: 0;
	right: 0;
}
.github-corner:hover .octo-arm{ animation:octocat-wave 560ms ease-in-out; }

@keyframes octocat-wave{
	0%,100%{ transform:rotate(0) }
	20%,60%{ transform:rotate(-25deg) }
	40%,80%{ transform:rotate(10deg) }
}
@media (max-width:500px) {
	.github-corner:hover .octo-arm{ animation: none; }
	.github-corner .octo-arm{ animation: octocat-wave 560ms ease-in-out; }
}
